define(["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.top10Arcade = "\n  var groups = [\n    {\n      value: $feature.ACSBLT1939,\n      alias: \"Before 1940\"\n    }, {\n      value: $feature.ACSBLT1940,\n      alias: \"1940s\"\n    }, {\n      value: $feature.ACSBLT1950,\n      alias: \"1950s\"\n    }, {\n      value: $feature.ACSBLT1960,\n      alias: \"1960s\"\n    }, {\n      value: $feature.ACSBLT1970,\n      alias: \"1970s\"\n    }, {\n      value: $feature.ACSBLT1980,\n      alias: \"1980s\"\n    }, {\n      value: $feature.ACSBLT1990,\n      alias: \"1990s\"\n    }, {\n      value: $feature.ACSBLT2000,\n      alias: \"2000s\"\n    }, {\n      value: $feature.ACSBLT2010,\n      alias: \"2010-2014\"\n    }, {\n      value: $feature.ACSBLT2014,\n      alias: \"After 2014\"\n    }\n  ];\n\n  var numTopValues = Count(groups);\n\n  function getValuesArray(a){\n    var valuesArray = []\n    for(var i in a){\n      valuesArray[i] = a[i].value;\n    }\n    return valuesArray;\n  }\n\n  function findAliases(top5a,fulla){\n    var aliases = [];\n    var found = \"\";\n    for(var i in top5a){\n      for(var k in fulla){\n        if(top5a[i] == fulla[k].value && Find(fulla[k].alias, found) == -1){\n          found += fulla[k].alias;\n          aliases[Count(aliases)] = {\n            alias: fulla[k].alias,\n            value: top5a[i]\n          };\n        }\n      }\n    }\n    return aliases;\n  }\n  \n  function getTopGroups(groupsArray){\n      \n    var values = getValuesArray(groupsArray);\n    var top5Values = IIF(Max(values) > 0, Top(Reverse(Sort(values)),numTopValues), \"no data\");\n    var top5Aliases = findAliases(top5Values,groupsArray);\n      \n    if(TypeOf(top5Values) == \"String\"){\n      return top5Values;\n    } else {\n      var content = \"\";\n      for(var i in top5Aliases){\n        if(top5Aliases[i].value > 0){\n          content += (i+1) + \". \" + top5Aliases[i].alias + \" (\" + Text(top5Aliases[i].value, \"#,###\") + \")\";\n          content += IIF(i < numTopValues-1, TextFormatting.NewLine, \"\");\n        }\n      }\n    }\n      \n    return content;\n  }\n  \n  getTopGroups(groups);\n";
    exports.totalArcade = "\n  Text( Sum( $feature.ACSBLT1939,\n        $feature.ACSBLT1940,\n        $feature.ACSBLT1950,\n        $feature.ACSBLT1960,\n        $feature.ACSBLT1970,\n        $feature.ACSBLT1980,\n        $feature.ACSBLT1990,\n        $feature.ACSBLT2000,\n        $feature.ACSBLT2010,\n        $feature.ACSBLT2014),\n  \"#,###\");\n";
});
//# sourceMappingURL=ArcadeExpressions.js.map